<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd">

	<!-- ==================== 加载.properties ======================= -->
	<bean id="propertyMananger"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>file:${INFCONF_HOME}/profile/encryptkey.properties</value>
				<value>file:${INFCONF_HOME}/profile/c3p0.properties</value>
			</list>
		</property>
	</bean>
	<!-- 实例化解密类，传入一个参数key -->
	<bean id="decrypter" class="com.tisson.common.utils.password.ImportantInfoDecrypter">
		<constructor-arg index="0">
			<value>${ENCRYPT.KEY}</value>
		</constructor-arg>
	</bean>

	<bean id="infDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<property name="driverClass" value="${c3p0.driverClass}" />
		<property name="jdbcUrl" value="${c3p0.inf.jdbcUrl}" />
		<property name="user" value="#{decrypter.decrypt('${c3p0.inf.user}')}" />
		<property name="password" value="#{decrypter.decrypt('${c3p0.inf.password}')}" />


		<property name="maxPoolSize" value="${c3p0.maxPoolSize}" />
		<property name="minPoolSize" value="${c3p0.minPoolSize}" />
		<property name="initialPoolSize" value="${c3p0.initialPoolSize}" />

		<property name="acquireIncrement" value="${c3p0.acquireIncrement}" />
		<property name="acquireRetryAttempts" value="${c3p0.acquireRetryAttempts}" />
		<property name="acquireRetryDelay" value="${c3p0.acquireRetryDelay}" />
		<property name="checkoutTimeout" value="${c3p0.checkoutTimeout}" />

		<property name="preferredTestQuery" value="${c3p0.preferredTestQuery}" />
		<property name="idleConnectionTestPeriod" value="${c3p0.idleConnectionTestPeriod}" />
		<property name="maxIdleTime" value="${c3p0.maxIdleTime}" />

		<property name="maxStatements" value="${c3p0.maxStatements}" />
		<property name="maxStatementsPerConnection" value="${c3p0.maxStatementsPerConnection}" />

		<property name="numHelperThreads" value="${c3p0.numHelperThreads}" />
	</bean>

	<!-- 核心数据库 -->
	<bean id="bisDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<property name="driverClass" value="${c3p0.driverClass}" />
		<property name="jdbcUrl" value="${c3p0.jdbcUrl}" />
		<property name="user" value="#{decrypter.decrypt('${c3p0.user}')}" />
		<property name="password" value="#{decrypter.decrypt('${c3p0.password}')}" />

		<property name="maxPoolSize" value="${c3p0.maxPoolSize}" />
		<property name="minPoolSize" value="${c3p0.minPoolSize}" />
		<property name="initialPoolSize" value="${c3p0.initialPoolSize}" />

		<property name="acquireIncrement" value="${c3p0.acquireIncrement}" />
		<property name="acquireRetryAttempts" value="${c3p0.acquireRetryAttempts}" />
		<property name="acquireRetryDelay" value="${c3p0.acquireRetryDelay}" />
		<property name="checkoutTimeout" value="${c3p0.checkoutTimeout}" />

		<property name="preferredTestQuery" value="${c3p0.preferredTestQuery}" />
		<property name="idleConnectionTestPeriod" value="${c3p0.idleConnectionTestPeriod}" />
		<property name="maxIdleTime" value="${c3p0.maxIdleTime}" />

		<property name="maxStatements" value="${c3p0.maxStatements}" />
		<property name="maxStatementsPerConnection" value="${c3p0.maxStatementsPerConnection}" />
		<property name="numHelperThreads" value="${c3p0.numHelperThreads}" />
	</bean>

	<!-- infdb -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean"
		name="infSqlSessionFactory">
		<property name="typeAliasesPackage" value="com.tisson.entity.inf" />
		<property name="dataSource" ref="infDataSource"></property>
		<property name="mapperLocations" value="classpath*:com/tisson/dao/inf/*.xml" />
	</bean>
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.tisson.dao.inf" />
		<property name="sqlSessionFactoryBeanName" value="infSqlSessionFactory" />
	</bean>
	<bean id="infTxManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="infDataSource" />
	</bean>
	<tx:annotation-driven order="1" transaction-manager="infTxManager" />
	
	<!-- bisdb -->
	<bean id="sqlSessionFactoryBis" class="org.mybatis.spring.SqlSessionFactoryBean"
	name="bisSqlSessionFactory">
		<property name="typeAliasesPackage" value="com.tisson.entity.bis" />
		<property name="dataSource" ref="bisDataSource"></property>
		<property name="mapperLocations" value="classpath*:com/tisson/dao/bis/*.xml" />
	</bean>
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.tisson.dao.bis" />
		<property name="sqlSessionFactoryBeanName" value="bisSqlSessionFactory" />
	</bean>
	<bean id="bisTxManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="bisDataSource" />
	</bean>
	<tx:annotation-driven order="2" transaction-manager="bisTxManager" />


	<!-- enable component scanning (beware that this does not enable mapper 
		scanning!) -->
	<context:component-scan base-package="com.tisson.service" />

	<!--注册Bean验证后处理器 <bean class="org.springframework.validation.beanvalidation.BeanValidationPostProcessor" 
		/> -->
	<!--注册方法验证的后处理器 <bean class="org.springframework.validation.beanvalidation.MethodValidationPostProcessor" 
		/> http://jinnianshilongnian.iteye.com/blog/1495594 -->
	<!-- 配置 JSR303 Bean Validator 定义 -->
	<bean id="validator"
		class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean" />


	<import resource="applicationContext-*.xml" />
</beans>